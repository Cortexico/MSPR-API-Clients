name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:13
        env:
          POSTGRES_USER: customers
          POSTGRES_PASSWORD: apiCustomers
          POSTGRES_DB: customers_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
          - 15672:15672
        options: >-
          --health-cmd "rabbitmq-diagnostics -q ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      POSTGRES_USER: customers
      POSTGRES_PASSWORD: apiCustomers
      POSTGRES_DB: customers_db
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      API_HOST: 0.0.0.0
      API_PORT: 8000
      RABBITMQ_HOST: localhost
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: guest
      RABBITMQ_PASSWORD: guest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      env:
        PYTHONPATH: ${{ github.workspace }}
      run: |
        # Attendre que les services soient prÃªts
        echo "Waiting for PostgreSQL and RabbitMQ to be ready..."
        sleep 15
        pytest

    - name: Lint code
      run: |
        pip install flake8
        flake8 app/

    - name: Build Docker image
      run: |
        docker build -t your-dockerhub-username/api-clients:latest .
